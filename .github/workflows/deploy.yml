name: Build and Deploy to Docker Hub and GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/projet_statique:latest

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    outputs:
      tests_passed: ${{ steps.tests.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Run tests
        id: tests
        run: |
          npm install
          npm test

      - name: Prepare static files
        run: |
          mkdir public
          for file in index.html style.css app.js; do
            if [ -f "$file" ]; then
              cp "$file" public/
            else
              echo "Warning: $file not found, skipping."
            fi
          done

      - name: Upload static site as artifact
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: ./public

  deploy-success:
    runs-on: ubuntu-latest
    needs: deploy-to-github-pages
    if: ${{ success() }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: public
          path: ./public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  deploy-last-successful-version:
    runs-on: ubuntu-latest
    needs: deploy-to-github-pages
    if: ${{ failure() }}
    steps:
      - name: Download the last successful artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: deploy.yml
          name: public
          path: ./public
          branch: main
          event: push

      - name: Deploy last successful version to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
