name: Build and Deploy to Docker Hub and GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/projet_statique:latest

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Prepare static files
        run: |
          mkdir public
          for file in index.html style.css app.js; do
            if [ -f "$file" ]; then
              cp "$file" public/
            else
              echo "Warning: $file not found, skipping."
            fi
          done

      - name: Upload static site contents
        uses: actions/upload-pages-artifact@v3
        with:
          name: static-site
          path: ./public

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies and run tests
        run: |
          npm install
          npm test

      - name: Deploy to GitHub Pages (only if tests pass)
        if: ${{ success() && steps.tests.outcome == 'success' }}
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  deploy-last-successful-version:
    runs-on: ubuntu-latest
    needs: deploy-to-github-pages
    if: ${{ failure() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download the last successful artifact (previous version)
        uses: actions/download-artifact@v3
        with:
          name: static-site  # Nom de l'artefact précédemment uploadé

      - name: Deploy the last successful version to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deploy_artifact
        uses: actions/deploy-pages@v4
